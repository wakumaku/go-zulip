package users_test

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"github.com/wakumaku/go-zulip/users"
)

func TestUpdateSettings(t *testing.T) {
	client := createMockClient(`{
    "msg": "",
    "result": "success"
}`)

	userSvc := users.NewService(client)

	resp, err := userSvc.UpdateSettings(context.Background(),
		users.Email("foo@bar.com"),
		users.SetFullName("Foo Bar"),
		users.SetPassword("newpassword", "oldpassword"),
		users.TwentyFourHourTime(true),
		users.WebMarkReadOnScrollPolicy(users.WebMarkReadOnScrollPolicyAlways),
		users.WebChannelDefaultView(users.WebChannelDefaultViewTopTopicInTheChannel),
		users.StarredMessageCounts(true),
		users.ReceivesTypingNotifications(true),
		users.WebSuggestUpdateTimezone(true),
		users.FluidLayoutWidth(true),
		users.HighContrastMode(false),
		users.WebFontSizePx(16),
		users.ColorScheme(users.ColorSchemeDarkTheme),
		users.EnableDraftsSynchronization(true),
		users.TranslateEmoticons(true),
		users.DisplayEmojiReactionUsers(true),
		users.DefaultLanguage("en"),
		users.WebHomeView(users.WebHomeViewAllMessages),
		users.WebEscapeNavigatesToHomeView(true),
		users.LeftSideUserlist(true),
		users.Emojiset(users.EmojiSetGoogle),
		users.DemoteInactiveStreams(users.DemoteInactiveStreamsAlways),
		users.UserListStyle(users.UserListStyleCompact),
		users.WebAnimateImagePreviews(users.WebAnimateImagePreviewsAlways),
		users.WebStreamUnreadsCountDisplayPolicy(users.WebStreamUnreadsCountDisplayPolicyAllChannels),
		users.HideAiFeatures(true),
		users.Timezone("America/New_York"),
		users.EnableStreamDesktopNotifications(true),
		users.EnableStreamEmailNotifications(true),
		users.EnableStreamPushNotifications(true),
		users.EnableStreamAudibleNotifications(true),
		users.NotificationSound("default"),
		users.EnableDesktopNotifications(true),
		users.EnableSounds(true),
		users.EmailNotificationsBatchingPeriodSeconds(60),
		users.EnableOfflineEmailNotifications(true),
		users.EnableOfflinePushNotifications(true),
		users.EnableOnlinePushNotifications(true),
		users.EnableFollowedTopicDesktopNotifications(true),
		users.EnableFollowedTopicEmailNotifications(true),
		users.EnableFollowedTopicPushNotifications(true),
		users.EnableFollowedTopicAudibleNotifications(true),
		users.EnableDigestEmails(true),
		users.EnableMarketingEmails(true),
		users.EnableLoginEmails(true),
		users.MessageContentInEmailNotifications(true),
		users.PMContentInDesktopNotifications(true),
		users.WildcardMentionsNotify(true),
		users.EnableFollowedTopicWildcardMentionsNotify(true),
		users.DesktopIconCountDisplay(users.DesktopIconCountDisplayAllUnreadMessages),
		users.RealmNameInEmailNotificationsPolicy(users.RealmNameInEmailNotificationsPolicyAlways),
		users.AutomaticallyFollowTopicsPolicy(users.AutomaticallyFollowTopicsPolicyNever),
		users.AutomaticallyUnmuteTopicsInMutedStreamsPolicy(users.AutomaticallyFollowTopicsPolicyNever),
		users.AutomaticallyFollowTopicsWhereMentioned(true),
		users.PresenceEnabled(true),
		users.EnterSends(true),
		users.SendPrivateTypingNotifications(true),
		users.SendStreamTypingNotifications(true),
		users.SendReadReceipts(true),
		users.AllowPrivateDataExport(true),
		users.EmailAddressVisibility(users.EmailAddressVisibilityEveryone),
		users.WebNavigateToSentMessage(true),
	)
	require.NoError(t, err)
	assert.Equal(t, "success", resp.Result())

	// validate the parameters sent are correct
	msg := map[string]interface{}{
		"email":                                               "foo@bar.com",
		"full_name":                                           "Foo Bar",
		"new_password":                                        "newpassword",
		"old_password":                                        "oldpassword",
		"twenty_four_hour_time":                               true,
		"web_mark_read_on_scroll_policy":                      users.WebMarkReadOnScrollPolicyAlways,
		"web_channel_default_view":                            users.WebChannelDefaultViewTopTopicInTheChannel,
		"starred_message_counts":                              true,
		"receives_typing_notifications":                       true,
		"web_suggest_update_timezone":                         true,
		"fluid_layout_width":                                  true,
		"high_contrast_mode":                                  false,
		"web_font_size_px":                                    16,
		"color_scheme":                                        users.ColorSchemeDarkTheme,
		"enable_drafts_synchronization":                       true,
		"translate_emoticons":                                 true,
		"display_emoji_reaction_users":                        true,
		"default_language":                                    "en",
		"web_home_view":                                       users.WebHomeViewAllMessages,
		"web_escape_navigates_to_home_view":                   true,
		"left_side_userlist":                                  true,
		"emojiset":                                            users.EmojiSetGoogle,
		"demote_inactive_streams":                             users.DemoteInactiveStreamsAlways,
		"user_list_style":                                     users.UserListStyleCompact,
		"web_animate_image_previews":                          users.WebAnimateImagePreviewsAlways,
		"web_stream_unreads_count_display_policy":             users.WebStreamUnreadsCountDisplayPolicyAllChannels,
		"hide_ai_features":                                    true,
		"timezone":                                            "America/New_York",
		"enable_stream_desktop_notifications":                 true,
		"enable_stream_email_notifications":                   true,
		"enable_stream_push_notifications":                    true,
		"enable_stream_audible_notifications":                 true,
		"notification_sound":                                  "default",
		"enable_desktop_notifications":                        true,
		"enable_sounds":                                       true,
		"email_notifications_batching_period_seconds":         60,
		"enable_offline_email_notifications":                  true,
		"enable_offline_push_notifications":                   true,
		"enable_online_push_notifications":                    true,
		"enable_followed_topic_desktop_notifications":         true,
		"enable_followed_topic_email_notifications":           true,
		"enable_followed_topic_push_notifications":            true,
		"enable_followed_topic_audible_notifications":         true,
		"enable_digest_emails":                                true,
		"enable_marketing_emails":                             true,
		"enable_login_emails":                                 true,
		"message_content_in_email_notifications":              true,
		"pm_content_in_desktop_notifications":                 true,
		"wildcard_mentions_notify":                            true,
		"enable_followed_topic_wildcard_mentions_notify":      true,
		"desktop_icon_count_display":                          users.DesktopIconCountDisplayAllUnreadMessages,
		"realm_name_in_email_notifications_policy":            users.RealmNameInEmailNotificationsPolicyAlways,
		"automatically_follow_topics_policy":                  users.AutomaticallyFollowTopicsPolicyNever,
		"automatically_unmute_topics_in_muted_streams_policy": users.AutomaticallyFollowTopicsPolicyNever,
		"automatically_follow_topics_where_mentioned":         true,
		"presence_enabled":                                    true,
		"enter_sends":                                         true,
		"send_private_typing_notifications":                   true,
		"send_stream_typing_notifications":                    true,
		"send_read_receipts":                                  true,
		"allow_private_data_export":                           true,
		"email_address_visibility":                            users.EmailAddressVisibilityEveryone,
		"web_navigate_to_sent_message":                        true,
	}
	assert.Equal(t, msg, client.(*mockClient).paramsSent)
}
